{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergovea/Downloads/01-starting-project 2/src/store/CartProvider.js\";\nimport { userReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = tate.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  const [cartState, dispatchCartAction] = userReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const context = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/alexandergovea/Downloads/01-starting-project 2/src/store/CartProvider.js"],"names":["userReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","tate","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","context","addItem","removeItem","children"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGC,IAAI,CAACT,WAAL,GAAmBG,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYI,MAA9E;AAEA,WAAO;AACLZ,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AAED,SAAOV,gBAAP;AACD,CAZD;;AAcA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,WAAW,CACjDK,WADiD,EAEjDH,gBAFiD,CAAnD;;AAKA,QAAMkB,oBAAoB,GAAIT,IAAD,IAAU;AACrCQ,IAAAA,kBAAkB,CAAC;AACjBX,MAAAA,IAAI,EAAE,KADW;AAEjBG,MAAAA,IAAI,EAAEA;AAFW,KAAD,CAAlB;AAID,GALD;;AAOA,QAAMU,uBAAuB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AACjBX,MAAAA,IAAI,EAAE,QADW;AAEjBc,MAAAA,EAAE,EAAEA;AAFa,KAAD,CAAlB;AAID,GALD;;AAOA,QAAMC,OAAO,GAAG;AACdpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADH;AAEdC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFT;AAGdoB,IAAAA,OAAO,EAAEJ,oBAHK;AAIdK,IAAAA,UAAU,EAAEJ;AAJE,GAAhB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,OAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;KAAMV,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import { userReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = tate.totalAmount + action.item.price * action.item.amount;\n    \n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = userReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemToCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const context = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={context}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}